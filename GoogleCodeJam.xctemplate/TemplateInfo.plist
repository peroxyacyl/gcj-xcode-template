<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Identifier</key>
	<string>com.intelback.xctemplate.gcj</string>
	<key>Concrete</key>
	<true/>
	<key>Description</key>
	<string>This template builds a Google Code Jam Project for C++</string>
	<key>Ancestors</key>
	<array>
		<string>com.apple.dt.unit.base</string>
		<string>com.apple.dt.unit.macBase</string>
	</array>
	<key>Targets</key>
	<array>
		<dict>
			<key>ProductType</key>
			<string>com.apple.product-type.tool</string>
			<key>BuildPhases</key>
			<array>
				<dict>
					<key>Class</key>
					<string>Sources</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>Frameworks</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>CopyFiles</string>
					<key>buildActionMask</key>
					<string>12</string>
					<key>DstSubfolderSpec</key>
					<string>16</string>
					<key>RunOnlyForDeploymentPostprocessing</key>
					<string>NO</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>Options</key>
	<array>
		<dict>
			<key>Identifier</key>
			<string>commandLineType</string>
			<key>Name</key>
			<string>Type</string>
			<key>Description</key>
			<string>The type of command-line tool to create</string>
			<key>Default</key>
			<string>C++</string>
			<key>Type</key>
			<string>popup</string>
			<key>Units</key>
			<dict>
				<key>C++</key>
				<dict>
					<key>Nodes</key>
					<array>
						<string>main.cpp:comments</string>
						<string>main.cpp:include</string>
						<string>main.cpp:main:content</string>
						<string>test.in</string>
						<string>small.in</string>
						<string>large.in</string>
						<string>test.out</string>
						<string>small.out</string>
						<string>large.out</string>
					</array>
					<key>Definitions</key>
					<dict>
						<key>main.cpp:include</key>
						<string>#include &lt;iostream&gt;
#include &lt;fstream&gt;
#include &lt;vector&gt;
#include &lt;list&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;deque&gt;
#include &lt;queue&gt;
#include &lt;stack&gt;
#include &lt;bitset&gt;
#include &lt;algorithm&gt;
#include &lt;functional&gt;
#include &lt;numeric&gt;
#include &lt;utility&gt;
#include &lt;sstream&gt;
#include &lt;iomanip&gt;
#include &lt;cstdio&gt;
#include &lt;cmath&gt;
#include &lt;cstdlib&gt;
#include &lt;cctype&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;ctime&gt;
using namespace std;


</string>
						<key>main.cpp:main:content</key>
						<string>const static string kProblemSet = &quot;test&quot;;

int main(int argc, const char * argv[]) {
    ifstream ifs( kProblemSet + &quot;.in&quot; );
    ofstream ofs( kProblemSet + &quot;.out&quot; );
	int T = 0;
    
	ifs &gt;&gt; T;
    
    for (int testCase = 0; testCase &lt; T; testCase++) {
        
        cout &lt;&lt; &quot;Case #&quot; &lt;&lt; testCase+1 &lt;&lt; &quot;: &quot; &lt;&lt; endl;
        ofs &lt;&lt; &quot;Case #&quot; &lt;&lt; testCase+1 &lt;&lt; &quot;: &quot; &lt;&lt; endl;
    }
    
	return 0;
}</string>
					</dict>
				</dict>
			</dict>
		</dict>
	</array>
	<key>Definitions</key>
	<dict>
		<key>test.in</key>
		<dict>
			<key>Path</key>
			<string>test.in</string>
		</dict>
		<key>small.in</key>
		<dict>
			<key>Path</key>
			<string>small.in</string>
		</dict>
		<key>large.in</key>
		<dict>
			<key>Path</key>
			<string>large.in</string>
		</dict>
		<key>test.out</key>
		<dict>
			<key>Path</key>
			<string>test.out</string>
		</dict>
		<key>small.out</key>
		<dict>
			<key>Path</key>
			<string>small.out</string>
		</dict>
		<key>large.out</key>
		<dict>
			<key>Path</key>
			<string>large.out</string>
		</dict>
	</dict>
</dict>
</plist>
